// idb.min.js (versiÃ³n minificada)
!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((n="undefined"!=typeof globalThis?globalThis:n||self).idb={})}(this,(function(n){"use strict";const e=(n,...e)=>{const t=new Map,n=n=>{const e=t.get(n);e&&e.forEach((n=>n()))},o=(n,e)=>{n.split(".").forEach((n=>{const e=t.get(n);e&&e.push(o)}))};return{set(n,...e){const o=e.slice(0,-1),i=e[e.length-1];t.has(n)||t.set(n,[]);const r=t.get(n);return r.push(o=>{o(...e)}),n.forEach((n=>{r.forEach((e=>{e(n,...o)}))})),i}}};let t={get:(n,e)=>e.cache.match(n),put:(n,e)=>e.cache.put(n),delete:(n,e)=>e.cache.delete(n)};const o=(n,e,t)=>{const o=e[t];return o?((e,t)=>{const o=new URL(e,"http://localhost"),i=o.pathname;return o.search="",o.hash="",{url:new URL(i,"http://localhost").href,params:n.entries()}})(n):o};const i=(n,e)=>{const t=e.entries();let o,i,r="";for(const[n,e]of t)"ignoreSearch"!==n&&"ignoreHash"!==n&&("string"==typeof e?(i=e,o=n):"number"==typeof e&&"deleteCache"===n&&(r=e));return{mode:o||"default",cache:i||"cache"+n.id,deleteCache:!!r}};let r={get:(n,e)=>e.cache.match(n).then((n=>n||fetch(e.url,e.params))),put:(n,e)=>e.cache.put(n,e.response),delete:(n,e)=>e.cache.delete(n)};const c=n=>{const e=t[n];return(e?o:t).bind(null,n)},u=(n,e)=>{const t=i(e,n);return(r[n].put||r.put)(t,e)},a=n=>n.json(),f=(n,e)=>{const t=e.id;return u(n,e).then((()=>u(e,t)))};n.delete=(n,e)=>c("delete")(n,e),n.get=(n,e)=>c("get")(n,e),n.set=(n,e)=>c("put")(n,e),n.update=f,n.waitUntil=a}));

